/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Court as PrismaCourt } from "@prisma/client";

export class CourtServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CourtCountArgs, "select">): Promise<number> {
    return this.prisma.court.count(args);
  }

  async courts(args: Prisma.CourtFindManyArgs): Promise<PrismaCourt[]> {
    return this.prisma.court.findMany(args);
  }
  async court(args: Prisma.CourtFindUniqueArgs): Promise<PrismaCourt | null> {
    return this.prisma.court.findUnique(args);
  }
  async createCourt(args: Prisma.CourtCreateArgs): Promise<PrismaCourt> {
    return this.prisma.court.create(args);
  }
  async updateCourt(args: Prisma.CourtUpdateArgs): Promise<PrismaCourt> {
    return this.prisma.court.update(args);
  }
  async deleteCourt(args: Prisma.CourtDeleteArgs): Promise<PrismaCourt> {
    return this.prisma.court.delete(args);
  }
}
